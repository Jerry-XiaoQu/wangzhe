@import './varibles';
//reset
* {
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 13px;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
    -webkit-font-smoothing: antialiased;
}
a {
    color: #999;
}
p {
    line-height: 1.5em;
}


@each $colorKey, $color in $colors {
    .text-#{$colorKey} {
        color: $color;
    }
    .bg-#{$colorKey} {
        background-color: $color;
    }
}

//text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var !important;
    }
}

//font-size

@each $sizeKey, $size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $size * $base-font-size;
    }
}

.w-100{
    width: 100%;
}
.h-100{
    height: 100%;
}
//flex
.d-flex{
    display: flex;
}
.text-ellipsis{
    display: inline-block;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
.flex-column{
    flex-direction: column;
}
.flex-wrap{
    flex-wrap: wrap;
}

@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

.flex-1 {
    flex: 1;
}

.flex-grow-1 {
    flex-grow: 1;
}

@each $typeKey, $type in $spacing-types {
    @each $sizingKey, $size in $spacing-sizes {
        .#{$typeKey}-#{$sizingKey}{
            #{$type}: $size * $spacing-base-size;
        }
    }

    @each $sizingKey, $size in $spacing-sizes {
        .#{$typeKey}x-#{$sizingKey}{
            #{$type}-left: $size * $spacing-base-size;
            #{$type}-right: $size * $spacing-base-size;

        }
    }
    @each $sizingKey, $size in $spacing-sizes {
        .#{$typeKey}y-#{$sizingKey}{
            #{$type}-top: $size * $spacing-base-size;
            #{$type}-bottom: $size * $spacing-base-size;

        }
    }

    @each $directionKey, $direction in $spacing-direction {
        @each $sizingKey, $size in $spacing-sizes {
            .#{$typeKey}#{$directionKey}-#{$sizingKey}{
                #{$type}-#{$direction}: $size * $spacing-base-size;
            }
        }
    }
    .#{$typeKey}{
        #{$type}: 0;
    }
}

//按钮
.btn{
    border: none;
    border-radius: .153846rem;
    font-size: map-get($font-sizes, 'sm') * $base-font-size;
    padding: 0.2rem 0.6rem;
    &.btn-lg{
        display: flex;
        align-items: center;
        margin-right: 0.5rem;
        justify-content: center;
        i{
            color: map-get($colors , 'primary' );
            font-weight: bold;
            font-size: 1.5rem;
        }
        background: map-get($colors, 'white-1' );
        border: 1px solid map-get($colors , 'white-2' );
        padding: 0.8rem 1rem;
        font-size: 1rem;
    }
}

//nav
.nav{
    display: flex;
    .nav-item{
        border-bottom: 3px solid transparent;
        padding-bottom: 0.2rem;
        &.active{
            color: map-get($colors, 'primary');
            border-bottom-color: map-get($colors, 'primary');
        }
    }
    &.nav-inverse{
        .nav-item{
            color: map-get($colors, 'white')
        }
        &.active{
            border-bottom-color: map-get($colors, 'white');
        }
    }
}

@each $dir in (top, right, left, bottom){
    .border-#{$dir} {
        border-#{$dir}: 1px solid $border-color;
    }
}

